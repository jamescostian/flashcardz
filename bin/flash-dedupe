#!/usr/bin/env node
const ss = require('stream-string')
process.stdin.setEncoding('utf8')

const f = require('../lib/module.js')
const program = require('commander')
const {readFileSync} = require('fs')

program
  .version(require('../package.json').version)
  .description('Given a file (or JSON from STDIN), prints the stack without any duplicate cards')
  .usage('[options] <file>')
  .option('-s, --spaces [number]', 'Number of spaces to indent the JSON [2]', '2')
  .parse(process.argv)

// Allow users to get tab-indented JSON instead of space-indented JSON
const spaces = program.spaces === '\t' || program.spaces === '\\t' ? spaces = '\t' : parseInt(program.spaces, 10)

if (program.args.length === 1) {
  const stack = JSON.parse(readFileSync(program.args[0]))
  console.log(JSON.stringify(f.dedupe(stack), null, spaces))
  process.exit()
} else {
  ss(process.stdin).then(stackStr => {
    const stack = JSON.parse(stackStr)
    console.log(JSON.stringify(f.dedupe(stack), null, spaces))
    process.exit()
  })
}
