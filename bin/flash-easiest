#!/usr/bin/env node
const ss = require('stream-string')
process.stdin.setEncoding('utf8')

var f = require('../lib/module.js')
var program = require('commander')
var fs = require('fs')

program
  .version(require('../package.json').version)
  .description('Given a file (or JSON from STDIN), prints the easiest card (or easiest cards with -n)')
  .usage('[options] <file>')
  .option('-s, --spaces [number]', 'Number of spaces to indent the JSON [2]', '2')
  .option('-n, --count [number]', 'Number of cards to show [1]', '1')
  .parse(process.argv)

var spaces
// Allow users to get tab-indented JSON instead of space-indented JSON
if (program.spaces === '\t' || program.spaces === '\\t') {
  spaces = '\t'
} else {
  spaces = parseInt(program.spaces, 10)
}

var count = parseInt(program.count, 10)

if (program.args.length === 1) {
  var stack = JSON.parse(fs.readFileSync(program.args[0]))
  if (count === -1) {
    count = stack.length
  }
  var easiest = f.easiest(stack, count)
  console.log(JSON.stringify(easiest, null, spaces))
  process.exit()
} else {
  ss(process.stdin).then(function (stackStr) {
    var stack = JSON.parse(stackStr)
    if (count === -1) {
      count = stack.length
    }
    var easiest = f.easiest(stack, count)
    console.log(JSON.stringify(easiest, null, spaces))
    process.exit()
  })
}
